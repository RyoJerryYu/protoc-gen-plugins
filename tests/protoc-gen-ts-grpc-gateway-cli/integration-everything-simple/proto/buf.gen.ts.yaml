version: v2
managed:
  enabled: true
plugins:
  # client, caseDefaultConfig
  - local: protoc-gen-ts-grpc-gateway-cli
    out: ../caseDefaultConfig
    opt:
      - paths=source_relative
  - remote: buf.build/community/stephenh-ts-proto
    out: ../caseDefaultConfig
    opt:
      - env=browser
      - esModuleInterop=true
      - useOptionals=messages
      - outputServices=generic-definitions
      - outputServices=nice-grpc
      - outputEncodeMethods=false
      - outputJsonMethods=true
      - stringEnums=false
      - useExactTypes=false

  # client, caseUseProtoNames
  - local: protoc-gen-ts-grpc-gateway-cli
    out: ../caseUseProtoNames
    opt:
      - paths=source_relative
      - marshal_use_proto_names=true
  - remote: buf.build/community/stephenh-ts-proto
    out: ../caseUseProtoNames
    opt:
      - env=browser
      - esModuleInterop=true
      - useOptionals=messages
      - outputServices=generic-definitions
      - outputServices=nice-grpc
      - outputEncodeMethods=false
      - outputJsonMethods=true
      - stringEnums=false
      - useExactTypes=false
      - snakeToCamel=keys # this is different from the caseDefaultConfig

  # client, caseStringEnums
  # to test ts-proto stringEnums option work with protoc-gen-go-json
  - local: protoc-gen-ts-grpc-gateway-cli
    out: ../caseStringEnums
    opt:
      - paths=source_relative
  - remote: buf.build/community/stephenh-ts-proto
    out: ../caseStringEnums
    opt:
      - env=browser
      - esModuleInterop=true
      - useOptionals=messages
      - outputServices=generic-definitions
      - outputServices=nice-grpc
      - outputEncodeMethods=false
      - outputJsonMethods=true
      - stringEnums=true # this is different from the caseDefaultConfig
      - useExactTypes=false
