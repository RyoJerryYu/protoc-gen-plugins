package pluginutils

import (
	"fmt"

	"google.golang.org/protobuf/compiler/protogen"
)

func (opt GenerateOptions) PHeader(p *protogen.Plugin) {
	opt.PCommentf("Code generated by %s. DO NOT EDIT.", opt.PluginName)
	opt.PCommentf("versions:")
	opt.PCommentf("- %s %s", opt.PluginName, opt.VersionStr)
	opt.PCommentf("- protoc %s", opt.protocVersion(p))

	if opt.F.Proto.GetOptions().GetDeprecated() {
		opt.PCommentf("%s is a deprecated file.", opt.F.Desc.Path())
	} else {
		opt.PCommentf("source: %s", opt.F.Desc.Path())
	}

	opt.P()
}
func (opt GenerateOptions) PPackage() {
	opt.Pf("package %s", opt.F.GoPackageName)
	opt.P()
}

func (opt GenerateOptions) protocVersion(p *protogen.Plugin) string {
	var versionStr string = "(unknown)"
	protocVersion := p.Request.GetCompilerVersion()
	if protocVersion != nil {
		versionStr = fmt.Sprintf("%d.%d.%d", protocVersion.GetMajor(), protocVersion.GetMinor(), protocVersion.GetPatch())
		if protocVersion.GetSuffix() != "" {
			versionStr += "-" + protocVersion.GetSuffix()
		}
	}

	return versionStr
}
